{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectTodo","className","map","todo","completed","id","title","classNames","type","onClick","TodoFilter","query","setQuery","setFilter","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","Loader","TodoModal","setSelectedTodo","useState","user","setUser","a","response","useEffect","fetchUsers","href","email","name","App","setTodos","todosLoaded","setTodosLoaded","filter","fetchTodos","memorizeFilter","useMemo","filteredByFilter","todoStatus","filterByStatus","includedQuery","toLocaleLowerCase","includes","newQuery","selectedFilter","newTodoId","ReactDOM","render","document","getElementById"],"mappings":"2QAWaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,WAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GACT,IACEC,EAIED,EAJFC,UACAC,EAGEF,EAHFE,GACAC,EAEEH,EAFFG,MAIF,OACE,qBACE,UAAQ,OACRL,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BI,IAC9B,oBAAIJ,UAAU,eAAd,SACGG,GACC,sBAAMH,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UACEM,IAAW,CACT,mBAAoBH,EACpB,mBAAoBA,IAJ1B,SAQGE,MAIL,oBAAIL,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPT,EAAWG,IALf,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UACDM,IAAW,MAAO,CAChB,UAAsB,OAAZR,QAAY,IAAZA,OAAA,EAAAA,EAAcM,MAAOA,EAC/B,gBAA4B,OAAZN,QAAY,IAAZA,OAAA,EAAAA,EAAcM,MAAOA,cApC1CA,YCrCJK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,UAApB,OACzC,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRa,SAAU,SAACC,GAAD,OAAWF,EAAUE,EAAMC,OAAOC,QAF9C,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGhB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVgB,MAAON,EACPO,YAAY,YACZJ,SAAU,SAACC,GAAD,OAAWH,EAASG,EAAMC,OAAOC,UAE7C,sBAAMhB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdU,GAEK,sBAAMV,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMG,EAAS,gBC9BxC,SAASS,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAAMC,EAAW,kBAAMX,EAAY,WAE7BY,EAAU,SAACC,GAAD,OAAoBb,EAAG,iBAAiBa,KCpBlDC,G,MAAmB,kBAC9B,qBAAKlC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCONmC,EAA6B,SAAC,GAGpC,IAFLrC,EAEI,EAFJA,aACAsC,EACI,EADJA,gBAEA,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KADI,4CAGJ,4BAAAC,EAAA,sEACyBR,EAAQlC,EAAamC,QAD9C,OACQQ,EADR,OAGEF,EAAQE,GAHV,4CAHI,sBAaJ,OAJAC,qBAAU,YATN,mCAUFC,KACC,IAGD,sBAAK3C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBACbsC,EAGA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaM,MAIzB,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,WACP+B,EAAQ,MACRH,EAAgB,YAKtB,sBAAKpC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaO,QAGhB,oBAAGL,UAAU,QAAQ,UAAQ,aAA7B,UACGF,EAAaK,UAEV,wBAAQH,UAAU,mBAAlB,kBAGA,wBAAQA,UAAU,kBAAlB,qBAGH,OAED,mBAAG4C,KAAI,iBAAYN,EAAKO,OAAxB,SACGP,EAAKQ,gBAxCd,cAAC,EAAD,QCnBKC,EAAgB,WAC3B,MAA0BV,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAcmD,EAAd,KACA,EAAsCX,oBAAS,GAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KACA,EAAwCb,mBAAsB,MAA9D,mBAAOvC,EAAP,KAAqBsC,EAArB,KACA,EAA0BC,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcC,EAAd,KACA,EAA4B0B,mBAAS,OAArC,mBAAOc,EAAP,KAAevC,EAAf,KALiC,4CAOjC,4BAAA4B,EAAA,sEACyBT,IADzB,OACQU,EADR,OAGES,GAAe,GACfF,EAASP,GAJX,4CAPiC,sBAcjCC,qBAAU,YAduB,mCAe/BU,KACC,IAEH,IAAMC,EAAiBC,mBAAQ,WAC7B,IAcMC,EAAmB1D,EAAMsD,QAAO,SAAAjD,GAAI,OAdnB,SAACsD,GACtB,OAAQL,GACN,IAAK,SACH,OAAQK,EAEV,IAAK,YACH,OAAOA,EAGT,QACE,OAAO,GAIiCC,CAAevD,EAAKC,cAC9DuD,EAAgBH,EAOpB,OALI7C,IACFgD,EAAgBH,EACbJ,QAAO,SAAAjD,GAAI,OAAIA,EAAKG,MAAMsD,oBAAoBC,SAASlD,EAAMiD,yBAG3DD,IACN,CAAChD,EAAOyC,EAAQtD,IAEnB,OACE,qCACE,qBAAKG,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOA,EACPC,SAAU,SAACkD,GAAD,OAAsBlD,EAASkD,IACzCjD,UAAW,SAACkD,GAAD,OAA4BlD,EAAUkD,QAIrD,qBAAK9D,UAAU,QAAf,SACIiD,EAGE,cAAC,EAAD,CACEpD,MAAOwD,EACPvD,aAAcA,EACdC,WAAY,SAACgE,GACX3B,EAAgB2B,MANnB,cAAC,EAAD,aAeZjE,GAEC,cAAC,EAAD,CACEA,aAAcA,EACdsC,gBAAiBA,QC1F3B4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d7b29cf4.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  selectTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const {\n          completed,\n          id,\n          title,\n          // userId,\n        } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={\n                  classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })\n                }\n              >\n                {title}\n\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    classNames('far', {\n                      'fa-eye': selectedTodo?.id !== id,\n                      'fa-eye-slash': selectedTodo?.id === id,\n                    })\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","interface Props {\n  query: string,\n  setQuery: (newQuery: string) => void,\n  setFilter: (selectedFilter: string) => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({ query, setQuery, setFilter }) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilter(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        value={query}\n        placeholder=\"Search...\"\n        onChange={(event) => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => setQuery('')}\n              />\n            </span>\n          )}\n\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  selectedTodo: Todo,\n  setSelectedTodo: (selectedTodo: Todo | null) => void,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  async function fetchUsers() {\n    const response = await getUser(selectedTodo.userId);\n\n    setUser(response);\n  }\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUser(null);\n                setSelectedTodo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosLoaded, setTodosLoaded] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  async function fetchTodos() {\n    const response = await getTodos();\n\n    setTodosLoaded(true);\n    setTodos(response);\n  }\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const memorizeFilter = useMemo(() => {\n    const filterByStatus = (todoStatus: boolean) => {\n      switch (filter) {\n        case 'active':\n          return !todoStatus;\n\n        case 'completed':\n          return todoStatus;\n\n        case 'all':\n        default:\n          return true;\n      }\n    };\n\n    const filteredByFilter = todos.filter(todo => filterByStatus(todo.completed));\n    let includedQuery = filteredByFilter;\n\n    if (query) {\n      includedQuery = filteredByFilter\n        .filter(todo => todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase()));\n    }\n\n    return includedQuery;\n  }, [query, filter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={(newQuery: string) => setQuery(newQuery)}\n                setFilter={(selectedFilter: string) => setFilter(selectedFilter)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todosLoaded\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={memorizeFilter}\n                    selectedTodo={selectedTodo}\n                    selectTodo={(newTodoId: Todo) => {\n                      setSelectedTodo(newTodoId);\n                    }}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo\n      && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}